plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'kyk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// JPA 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// 타임리프 추가
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// 검증기 추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// 웹 소켓
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// sockjs
	implementation 'org.webjars:sockjs-client:1.5.1'
	// stomp
	implementation 'org.webjars:stomp-websocket:2.3.4'
	// gson
	implementation 'com.google.code.gson:gson:2.9.0'

	// QueryDSL 추가
	implementation "com.querydsl:querydsl-jpa"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드


	// 서버 재시작 없이 바로 정적 리소스를 적용하기위해
//	compileOnly("org.springframework.boot:spring-boot-devtools")

	// 파라미터 바인딩을 보여주는 org.hibernate.type: trace 설정이 가시성이 좋지않아 이 라이브러리를 가져와서 파라미터 바인딩 내용을 가시성 좋게 볼 수 있게함
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'


	// 롬복
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// h2 데이터베이스
	runtimeOnly 'com.h2database:h2'
	
	// oracle 데이터베이스
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'

	// oracle cloud에서 전자지갑으로 접속할 때의 필요한 설정
	implementation 'com.oracle.database.security:oraclepki'
	implementation 'com.oracle.database.security:osdt_core'
	implementation 'com.oracle.database.security:osdt_cert'

}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거한다.
clean {
	delete file('src/main/generated')
}